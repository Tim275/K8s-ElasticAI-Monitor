---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logstash
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: logstash
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources: ["*"]
    verbs:
      - get
      - list
      - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: logstash
roleRef:
  kind: ClusterRole
  name: logstash
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: logstash
    namespace: kube-system

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: kube-system
data:
  logstash.conf: |
    input {
      file {
        path => "/var/log/containers/*.log"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        codec => json
        type => "container-logs"
        max_open_files => 4095
      }
    }

    filter {
      json {
        source => "message"
        skip_on_invalid_json => true
      }
      mutate {
        remove_field => ["@version", "host"]
      }
    }

    output {
      elasticsearch {
        hosts => ["http://elastic.timourproject.com:80"]
        user => "elastic"
        password => "1qazXSW@3edc"
        index => "k8s-infra-%{+YYYY.MM.dd}"
        ssl_verify => false
        template_overwrite => true
      }
    }

  jvm.options: |
    -Xms512m
    -Xmx512m
    -XX:+UseG1GC
    -XX:G1ReservePercent=25
    -XX:InitiatingHeapOccupancyPercent=75
    -Djava.io.tmpdir=${APP_HOME_DIR}
    -Dfile.encoding=UTF-8

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: logstash-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: logstash-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: logstash
      serviceAccountName: logstash
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: increase-limits
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - |
              sysctl -w fs.file-max=65536
              sysctl -w vm.max_map_count=262144
              ulimit -n 65536
          securityContext:
            privileged: true
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.17.0
          env:
            - name: LS_JAVA_OPTS
              value: "-Xms512m -Xmx512m -XX:+UseG1GC -Djava.io.tmpdir=/tmp"
            - name: PIPELINE_WORKERS
              value: "2"
            - name: CONFIG_RELOAD_AUTOMATIC
              value: "true"
            - name: XPACK_MONITORING_ENABLED
              value: "false"
          resources:
            limits:
              memory: 1Gi
              cpu: 1000m
            requests:
              cpu: 200m
              memory: 512Mi
          ports:
            - containerPort: 9600
              name: monitoring
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
            - name: jvm-config
              mountPath: /usr/share/logstash/config/jvm.options
              subPath: jvm.options
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: data
              mountPath: /usr/share/logstash/data
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            capabilities:
              add:
                - SYS_RESOURCE
                - IPC_LOCK
          readinessProbe:
            httpGet:
              path: /
              port: monitoring
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: monitoring
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
      volumes:
        - name: config-volume
          configMap:
            name: logstash-config
        - name: jvm-config
          configMap:
            name: logstash-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: data
          emptyDir: {}
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
